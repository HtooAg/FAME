/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/register/route";
exports.ids = ["app/api/auth/register/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:events");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "?d272":
/*!********************************!*\
  !*** supports-color (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fregister%2Froute&page=%2Fapi%2Fauth%2Fregister%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fregister%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CDownloads%5Cfame-event-manager%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CDownloads%5Cfame-event-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fregister%2Froute&page=%2Fapi%2Fauth%2Fregister%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fregister%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CDownloads%5Cfame-event-manager%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CDownloads%5Cfame-event-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_ASUS_Downloads_fame_event_manager_app_api_auth_register_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/auth/register/route.ts */ \"(rsc)/./app/api/auth/register/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/register/route\",\n        pathname: \"/api/auth/register\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/register/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\fame-event-manager\\\\app\\\\api\\\\auth\\\\register\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_ASUS_Downloads_fame_event_manager_app_api_auth_register_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/register/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGcmVnaXN0ZXIlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkZyZWdpc3RlciUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkZyZWdpc3RlciUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNBU1VTJTVDRG93bmxvYWRzJTVDZmFtZS1ldmVudC1tYW5hZ2VyJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNBU1VTJTVDRG93bmxvYWRzJTVDZmFtZS1ldmVudC1tYW5hZ2VyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrQztBQUMvRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvPzA2YzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcQVNVU1xcXFxEb3dubG9hZHNcXFxcZmFtZS1ldmVudC1tYW5hZ2VyXFxcXGFwcFxcXFxhcGlcXFxcYXV0aFxcXFxyZWdpc3RlclxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYXV0aC9yZWdpc3Rlci9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2F1dGgvcmVnaXN0ZXJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2F1dGgvcmVnaXN0ZXIvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxBU1VTXFxcXERvd25sb2Fkc1xcXFxmYW1lLWV2ZW50LW1hbmFnZXJcXFxcYXBwXFxcXGFwaVxcXFxhdXRoXFxcXHJlZ2lzdGVyXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hdXRoL3JlZ2lzdGVyL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fregister%2Froute&page=%2Fapi%2Fauth%2Fregister%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fregister%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CDownloads%5Cfame-event-manager%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CDownloads%5Cfame-event-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/auth/register/route.ts":
/*!****************************************!*\
  !*** ./app/api/auth/register/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var _lib_gcs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/gcs */ \"(rsc)/./lib/gcs.ts\");\n\n\n\nasync function getNextId() {\n    const counter = await (0,_lib_gcs__WEBPACK_IMPORTED_MODULE_2__.readJsonFile)(_lib_gcs__WEBPACK_IMPORTED_MODULE_2__.paths.stageManagerCounter, {\n        currentId: 0\n    });\n    const nextId = counter.currentId + 1;\n    await (0,_lib_gcs__WEBPACK_IMPORTED_MODULE_2__.writeJsonFile)(_lib_gcs__WEBPACK_IMPORTED_MODULE_2__.paths.stageManagerCounter, {\n        currentId: nextId\n    });\n    return nextId;\n}\nasync function POST(request) {\n    try {\n        const { name, email, password, eventName } = await request.json();\n        // Validate required fields\n        if (!name || !email || !password) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Name, email, and password are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Check email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(email)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid email format\"\n            }, {\n                status: 400\n            });\n        }\n        const id = await getNextId();\n        const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].hash(password, parseInt(process.env.BCRYPT_ROUNDS || \"10\"));\n        // Store a registration per-role file with name in filename\n        const registration = {\n            id,\n            name,\n            email,\n            password: hashedPassword,\n            role: \"stage_manager\",\n            accountStatus: \"pending\",\n            subscriptionStatus: \"trial\",\n            subscriptionEndDate: \"\",\n            isActive: false,\n            eventName,\n            registeredAt: new Date().toISOString(),\n            metadata: {\n                ipAddress: request.ip || \"unknown\",\n                userAgent: request.headers.get(\"user-agent\") || \"unknown\",\n                createdAt: new Date().toISOString()\n            }\n        };\n        // Save the registration using both name and ID in the path\n        await (0,_lib_gcs__WEBPACK_IMPORTED_MODULE_2__.writeJsonFile)(_lib_gcs__WEBPACK_IMPORTED_MODULE_2__.paths.registrationStageManagerFile(name, id), registration);\n        // Create notification for super admin with sequential ID\n        await (0,_lib_gcs__WEBPACK_IMPORTED_MODULE_2__.writeJsonFile)(`notifications/admin/registration-${id}.json`, {\n            id: `reg-${id}`,\n            type: \"new_registration\",\n            stageManagerId: id,\n            stageManagerName: name,\n            message: `New stage manager registration: ${name} (${email})`,\n            eventName,\n            timestamp: new Date().toISOString(),\n            read: false\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Registration submitted successfully. Await admin approval.\",\n            id\n        });\n    } catch (error) {\n        console.error(\"Registration error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Registration failed\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2F1dGgvcmVnaXN0ZXIvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUMxQjtBQUNpQztBQUUvRCxlQUFlSztJQUNkLE1BQU1DLFVBQVUsTUFBTUYsc0RBQVlBLENBQ2pDRCwyQ0FBS0EsQ0FBQ0ksbUJBQW1CLEVBQ3pCO1FBQUVDLFdBQVc7SUFBRTtJQUVoQixNQUFNQyxTQUFTSCxRQUFRRSxTQUFTLEdBQUc7SUFDbkMsTUFBTU4sdURBQWFBLENBQUNDLDJDQUFLQSxDQUFDSSxtQkFBbUIsRUFBRTtRQUFFQyxXQUFXQztJQUFPO0lBQ25FLE9BQU9BO0FBQ1I7QUFFTyxlQUFlQyxLQUFLQyxPQUFvQjtJQUM5QyxJQUFJO1FBQ0gsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUUsR0FBRyxNQUFNSixRQUFRSyxJQUFJO1FBRS9ELDJCQUEyQjtRQUMzQixJQUFJLENBQUNKLFFBQVEsQ0FBQ0MsU0FBUyxDQUFDQyxVQUFVO1lBQ2pDLE9BQU9kLHFEQUFZQSxDQUFDZ0IsSUFBSSxDQUN2QjtnQkFBRUMsT0FBTztZQUF5QyxHQUNsRDtnQkFBRUMsUUFBUTtZQUFJO1FBRWhCO1FBRUEscUJBQXFCO1FBQ3JCLE1BQU1DLGFBQWE7UUFDbkIsSUFBSSxDQUFDQSxXQUFXQyxJQUFJLENBQUNQLFFBQVE7WUFDNUIsT0FBT2IscURBQVlBLENBQUNnQixJQUFJLENBQ3ZCO2dCQUFFQyxPQUFPO1lBQXVCLEdBQ2hDO2dCQUFFQyxRQUFRO1lBQUk7UUFFaEI7UUFFQSxNQUFNRyxLQUFLLE1BQU1oQjtRQUNqQixNQUFNaUIsaUJBQWlCLE1BQU1yQixxREFBVyxDQUN2Q2EsVUFDQVUsU0FBU0MsUUFBUUMsR0FBRyxDQUFDQyxhQUFhLElBQUk7UUFHdkMsMkRBQTJEO1FBQzNELE1BQU1DLGVBQWU7WUFDcEJQO1lBQ0FUO1lBQ0FDO1lBQ0FDLFVBQVVRO1lBQ1ZPLE1BQU07WUFDTkMsZUFBZTtZQUNmQyxvQkFBb0I7WUFDcEJDLHFCQUFxQjtZQUNyQkMsVUFBVTtZQUNWbEI7WUFDQW1CLGNBQWMsSUFBSUMsT0FBT0MsV0FBVztZQUNwQ0MsVUFBVTtnQkFDVEMsV0FBVzNCLFFBQVE0QixFQUFFLElBQUk7Z0JBQ3pCQyxXQUFXN0IsUUFBUThCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQjtnQkFDaERDLFdBQVcsSUFBSVIsT0FBT0MsV0FBVztZQUNsQztRQUNEO1FBRUEsMkRBQTJEO1FBQzNELE1BQU1sQyx1REFBYUEsQ0FDbEJDLDJDQUFLQSxDQUFDeUMsNEJBQTRCLENBQUNoQyxNQUFNUyxLQUN6Q087UUFHRCx5REFBeUQ7UUFDekQsTUFBTTFCLHVEQUFhQSxDQUFDLENBQUMsaUNBQWlDLEVBQUVtQixHQUFHLEtBQUssQ0FBQyxFQUFFO1lBQ2xFQSxJQUFJLENBQUMsSUFBSSxFQUFFQSxHQUFHLENBQUM7WUFDZndCLE1BQU07WUFDTkMsZ0JBQWdCekI7WUFDaEIwQixrQkFBa0JuQztZQUNsQm9DLFNBQVMsQ0FBQyxnQ0FBZ0MsRUFBRXBDLEtBQUssRUFBRSxFQUFFQyxNQUFNLENBQUMsQ0FBQztZQUM3REU7WUFDQWtDLFdBQVcsSUFBSWQsT0FBT0MsV0FBVztZQUNqQ2MsTUFBTTtRQUNQO1FBRUEsT0FBT2xELHFEQUFZQSxDQUFDZ0IsSUFBSSxDQUFDO1lBQ3hCZ0MsU0FDQztZQUNEM0I7UUFDRDtJQUNELEVBQUUsT0FBT0osT0FBTztRQUNma0MsUUFBUWxDLEtBQUssQ0FBQyx1QkFBdUJBO1FBQ3JDLE9BQU9qQixxREFBWUEsQ0FBQ2dCLElBQUksQ0FDdkI7WUFBRUMsT0FBTztRQUFzQixHQUMvQjtZQUFFQyxRQUFRO1FBQUk7SUFFaEI7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9hcHAvYXBpL2F1dGgvcmVnaXN0ZXIvcm91dGUudHM/NGE4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgYmNyeXB0IGZyb20gXCJiY3J5cHRqc1wiO1xuaW1wb3J0IHsgd3JpdGVKc29uRmlsZSwgcGF0aHMsIHJlYWRKc29uRmlsZSB9IGZyb20gXCJAL2xpYi9nY3NcIjtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0TmV4dElkKCk6IFByb21pc2U8bnVtYmVyPiB7XG5cdGNvbnN0IGNvdW50ZXIgPSBhd2FpdCByZWFkSnNvbkZpbGU8eyBjdXJyZW50SWQ6IG51bWJlciB9Pihcblx0XHRwYXRocy5zdGFnZU1hbmFnZXJDb3VudGVyLFxuXHRcdHsgY3VycmVudElkOiAwIH1cblx0KTtcblx0Y29uc3QgbmV4dElkID0gY291bnRlci5jdXJyZW50SWQgKyAxO1xuXHRhd2FpdCB3cml0ZUpzb25GaWxlKHBhdGhzLnN0YWdlTWFuYWdlckNvdW50ZXIsIHsgY3VycmVudElkOiBuZXh0SWQgfSk7XG5cdHJldHVybiBuZXh0SWQ7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG5cdHRyeSB7XG5cdFx0Y29uc3QgeyBuYW1lLCBlbWFpbCwgcGFzc3dvcmQsIGV2ZW50TmFtZSB9ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG5cblx0XHQvLyBWYWxpZGF0ZSByZXF1aXJlZCBmaWVsZHNcblx0XHRpZiAoIW5hbWUgfHwgIWVtYWlsIHx8ICFwYXNzd29yZCkge1xuXHRcdFx0cmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuXHRcdFx0XHR7IGVycm9yOiBcIk5hbWUsIGVtYWlsLCBhbmQgcGFzc3dvcmQgYXJlIHJlcXVpcmVkXCIgfSxcblx0XHRcdFx0eyBzdGF0dXM6IDQwMCB9XG5cdFx0XHQpO1xuXHRcdH1cblxuXHRcdC8vIENoZWNrIGVtYWlsIGZvcm1hdFxuXHRcdGNvbnN0IGVtYWlsUmVnZXggPSAvXlteXFxzQF0rQFteXFxzQF0rXFwuW15cXHNAXSskLztcblx0XHRpZiAoIWVtYWlsUmVnZXgudGVzdChlbWFpbCkpIHtcblx0XHRcdHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcblx0XHRcdFx0eyBlcnJvcjogXCJJbnZhbGlkIGVtYWlsIGZvcm1hdFwiIH0sXG5cdFx0XHRcdHsgc3RhdHVzOiA0MDAgfVxuXHRcdFx0KTtcblx0XHR9XG5cblx0XHRjb25zdCBpZCA9IGF3YWl0IGdldE5leHRJZCgpO1xuXHRcdGNvbnN0IGhhc2hlZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2goXG5cdFx0XHRwYXNzd29yZCxcblx0XHRcdHBhcnNlSW50KHByb2Nlc3MuZW52LkJDUllQVF9ST1VORFMgfHwgXCIxMFwiKVxuXHRcdCk7XG5cblx0XHQvLyBTdG9yZSBhIHJlZ2lzdHJhdGlvbiBwZXItcm9sZSBmaWxlIHdpdGggbmFtZSBpbiBmaWxlbmFtZVxuXHRcdGNvbnN0IHJlZ2lzdHJhdGlvbiA9IHtcblx0XHRcdGlkLFxuXHRcdFx0bmFtZSxcblx0XHRcdGVtYWlsLFxuXHRcdFx0cGFzc3dvcmQ6IGhhc2hlZFBhc3N3b3JkLFxuXHRcdFx0cm9sZTogXCJzdGFnZV9tYW5hZ2VyXCIsXG5cdFx0XHRhY2NvdW50U3RhdHVzOiBcInBlbmRpbmdcIixcblx0XHRcdHN1YnNjcmlwdGlvblN0YXR1czogXCJ0cmlhbFwiLFxuXHRcdFx0c3Vic2NyaXB0aW9uRW5kRGF0ZTogXCJcIixcblx0XHRcdGlzQWN0aXZlOiBmYWxzZSxcblx0XHRcdGV2ZW50TmFtZSxcblx0XHRcdHJlZ2lzdGVyZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuXHRcdFx0bWV0YWRhdGE6IHtcblx0XHRcdFx0aXBBZGRyZXNzOiByZXF1ZXN0LmlwIHx8IFwidW5rbm93blwiLFxuXHRcdFx0XHR1c2VyQWdlbnQ6IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJ1c2VyLWFnZW50XCIpIHx8IFwidW5rbm93blwiLFxuXHRcdFx0XHRjcmVhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcblx0XHRcdH0sXG5cdFx0fTtcblxuXHRcdC8vIFNhdmUgdGhlIHJlZ2lzdHJhdGlvbiB1c2luZyBib3RoIG5hbWUgYW5kIElEIGluIHRoZSBwYXRoXG5cdFx0YXdhaXQgd3JpdGVKc29uRmlsZShcblx0XHRcdHBhdGhzLnJlZ2lzdHJhdGlvblN0YWdlTWFuYWdlckZpbGUobmFtZSwgaWQpLFxuXHRcdFx0cmVnaXN0cmF0aW9uXG5cdFx0KTtcblxuXHRcdC8vIENyZWF0ZSBub3RpZmljYXRpb24gZm9yIHN1cGVyIGFkbWluIHdpdGggc2VxdWVudGlhbCBJRFxuXHRcdGF3YWl0IHdyaXRlSnNvbkZpbGUoYG5vdGlmaWNhdGlvbnMvYWRtaW4vcmVnaXN0cmF0aW9uLSR7aWR9Lmpzb25gLCB7XG5cdFx0XHRpZDogYHJlZy0ke2lkfWAsXG5cdFx0XHR0eXBlOiBcIm5ld19yZWdpc3RyYXRpb25cIixcblx0XHRcdHN0YWdlTWFuYWdlcklkOiBpZCxcblx0XHRcdHN0YWdlTWFuYWdlck5hbWU6IG5hbWUsXG5cdFx0XHRtZXNzYWdlOiBgTmV3IHN0YWdlIG1hbmFnZXIgcmVnaXN0cmF0aW9uOiAke25hbWV9ICgke2VtYWlsfSlgLFxuXHRcdFx0ZXZlbnROYW1lLFxuXHRcdFx0dGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG5cdFx0XHRyZWFkOiBmYWxzZSxcblx0XHR9KTtcblxuXHRcdHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG5cdFx0XHRtZXNzYWdlOlxuXHRcdFx0XHRcIlJlZ2lzdHJhdGlvbiBzdWJtaXR0ZWQgc3VjY2Vzc2Z1bGx5LiBBd2FpdCBhZG1pbiBhcHByb3ZhbC5cIixcblx0XHRcdGlkLFxuXHRcdH0pO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3IoXCJSZWdpc3RyYXRpb24gZXJyb3I6XCIsIGVycm9yKTtcblx0XHRyZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG5cdFx0XHR7IGVycm9yOiBcIlJlZ2lzdHJhdGlvbiBmYWlsZWRcIiB9LFxuXHRcdFx0eyBzdGF0dXM6IDUwMCB9XG5cdFx0KTtcblx0fVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImJjcnlwdCIsIndyaXRlSnNvbkZpbGUiLCJwYXRocyIsInJlYWRKc29uRmlsZSIsImdldE5leHRJZCIsImNvdW50ZXIiLCJzdGFnZU1hbmFnZXJDb3VudGVyIiwiY3VycmVudElkIiwibmV4dElkIiwiUE9TVCIsInJlcXVlc3QiLCJuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsImV2ZW50TmFtZSIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsImVtYWlsUmVnZXgiLCJ0ZXN0IiwiaWQiLCJoYXNoZWRQYXNzd29yZCIsImhhc2giLCJwYXJzZUludCIsInByb2Nlc3MiLCJlbnYiLCJCQ1JZUFRfUk9VTkRTIiwicmVnaXN0cmF0aW9uIiwicm9sZSIsImFjY291bnRTdGF0dXMiLCJzdWJzY3JpcHRpb25TdGF0dXMiLCJzdWJzY3JpcHRpb25FbmREYXRlIiwiaXNBY3RpdmUiLCJyZWdpc3RlcmVkQXQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJtZXRhZGF0YSIsImlwQWRkcmVzcyIsImlwIiwidXNlckFnZW50IiwiaGVhZGVycyIsImdldCIsImNyZWF0ZWRBdCIsInJlZ2lzdHJhdGlvblN0YWdlTWFuYWdlckZpbGUiLCJ0eXBlIiwic3RhZ2VNYW5hZ2VySWQiLCJzdGFnZU1hbmFnZXJOYW1lIiwibWVzc2FnZSIsInRpbWVzdGFtcCIsInJlYWQiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/register/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/gcs.ts":
/*!********************!*\
  !*** ./lib/gcs.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GCSManager: () => (/* binding */ GCSManager),\n/* harmony export */   createArtistDataStructure: () => (/* binding */ createArtistDataStructure),\n/* harmony export */   deleteFromArrayFile: () => (/* binding */ deleteFromArrayFile),\n/* harmony export */   gcsManager: () => (/* binding */ gcsManager),\n/* harmony export */   paths: () => (/* binding */ paths),\n/* harmony export */   readJsonDirectory: () => (/* binding */ readJsonDirectory),\n/* harmony export */   readJsonFile: () => (/* binding */ readJsonFile),\n/* harmony export */   upsertArrayFile: () => (/* binding */ upsertArrayFile),\n/* harmony export */   writeJsonFile: () => (/* binding */ writeJsonFile)\n/* harmony export */ });\n/* harmony import */ var _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./google-cloud-storage */ \"(rsc)/./lib/google-cloud-storage.ts\");\n// Google Cloud Storage utility functions\n// Note: This is a simplified implementation for demonstration\n// In production, you would use the actual Google Cloud Storage SDK\n\n// File paths configuration\nconst paths = {\n    usersIndex: \"users/index.json\",\n    registrationStageManagerDir: \"registrations/stage-managers\",\n    registrationArtistDir: \"registrations/artists\",\n    eventsIndex: \"events/index.json\",\n    stageManagersIndex: \"stage-managers/index.json\",\n    superAdminsIndex: \"super-admins/index.json\",\n    globalArtistsIndex: \"artists/index.json\",\n    stageManagerCounter: \"counters/stage-manager.json\",\n    userByRole: (role, id)=>`users/${role}/${id}.json`,\n    registrationStageManagerFile: (name, id)=>`registrations/stage-managers/${name}-${id}.json`,\n    registrationArtistFile: (name, id)=>`registrations/artists/${name}-${id}.json`,\n    eventFile: (eventId)=>`events/${eventId}.json`,\n    artistFile: (artistId)=>`artists/${artistId}.json`,\n    artistsIndex: (eventId)=>`events/${eventId}/artists/index.json`,\n    stageManagerFile: (stageManagerId)=>`stage-managers/${stageManagerId}.json`\n};\nclass GCSManager {\n    constructor(bucketName = \"artist-event-storage\"){\n        this.bucketName = bucketName;\n    }\n    /**\n\t * Upload a file to Google Cloud Storage\n\t */ async uploadFile(file, folder, artistId) {\n        try {\n            // Generate unique filename\n            const timestamp = Date.now();\n            const randomId = Math.random().toString(36).substring(2, 9);\n            const extension = file.name.split(\".\").pop();\n            const filename = `${timestamp}_${randomId}.${extension}`;\n            // Convert File to Buffer\n            const arrayBuffer = await file.arrayBuffer();\n            const buffer = Buffer.from(arrayBuffer);\n            // Upload to Google Cloud Storage\n            const result = await _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].uploadFile(buffer, filename, `${folder}/${artistId}`, file.type);\n            return {\n                url: result.url,\n                filename: result.filename,\n                size: file.size,\n                contentType: file.type\n            };\n        } catch (error) {\n            console.error(\"Error uploading file to Google Cloud Storage:\", error);\n            throw new Error(\"Failed to upload file to Google Cloud Storage\");\n        }\n    }\n    /**\n\t * Upload multiple files\n\t */ async uploadFiles(files, folder, artistId) {\n        const uploadPromises = files.map((file)=>this.uploadFile(file, folder, artistId));\n        return Promise.all(uploadPromises);\n    }\n    /**\n\t * Delete a file from Google Cloud Storage\n\t */ async deleteFile(filename) {\n        try {\n            await _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deleteFile(filename);\n        } catch (error) {\n            console.error(\"Error deleting file from Google Cloud Storage:\", error);\n            throw new Error(\"Failed to delete file from Google Cloud Storage\");\n        }\n    }\n    /**\n\t * Get a signed URL for file access\n\t */ async getSignedUrl(filename, expiresIn = 3600) {\n        try {\n            return await _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSignedUrl(filename, expiresIn);\n        } catch (error) {\n            console.error(\"Error generating signed URL from Google Cloud Storage:\", error);\n            throw new Error(\"Failed to generate signed URL from Google Cloud Storage\");\n        }\n    }\n}\n// Export a default instance\nconst gcsManager = new GCSManager();\nasync function readJsonFile(path, defaultValue = null) {\n    try {\n        const data = await _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].readJSON(path);\n        return data !== null ? data : defaultValue;\n    } catch (error) {\n        console.error(\"Error reading JSON file from Google Cloud Storage:\", error);\n        return defaultValue;\n    }\n}\n/**\n * Write JSON file to Google Cloud Storage\n */ async function writeJsonFile(path, data) {\n    try {\n        await _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].saveJSON(data, path);\n    } catch (error) {\n        console.error(\"Error writing JSON file to Google Cloud Storage:\", error);\n        throw new Error(\"Failed to write JSON file to Google Cloud Storage\");\n    }\n}\n/**\n * Read all JSON files from a directory in Google Cloud Storage\n */ async function readJsonDirectory(dirPath) {\n    try {\n        const files = await _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].listFiles(dirPath);\n        const jsonFiles = files.filter((file)=>file.endsWith(\".json\"));\n        const results = [];\n        for (const file of jsonFiles){\n            const data = await _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].readJSON(file);\n            if (data !== null) {\n                results.push(data);\n            }\n        }\n        return results;\n    } catch (error) {\n        console.error(\"Error reading JSON directory from Google Cloud Storage:\", error);\n        return [];\n    }\n}\n/**\n * Upsert (insert or update) an item in an array file\n */ async function upsertArrayFile(path, item, matchField = \"id\") {\n    try {\n        const existingData = await readJsonFile(path, []);\n        const array = existingData || [];\n        const existingIndex = array.findIndex((existing)=>existing[matchField] === item[matchField]);\n        if (existingIndex >= 0) {\n            // Update existing item\n            array[existingIndex] = {\n                ...array[existingIndex],\n                ...item\n            };\n        } else {\n            // Add new item\n            array.push(item);\n        }\n        await writeJsonFile(path, array);\n    } catch (error) {\n        console.error(\"Error upserting array file:\", error);\n        throw new Error(\"Failed to upsert array file\");\n    }\n}\n/**\n * Delete an item from an array file\n */ async function deleteFromArrayFile(path, itemId, matchField = \"id\") {\n    try {\n        const existingData = await readJsonFile(path, []);\n        const array = existingData || [];\n        const filteredArray = array.filter((item)=>item[matchField] !== itemId);\n        await writeJsonFile(path, filteredArray);\n    } catch (error) {\n        console.error(\"Error deleting from array file:\", error);\n        throw new Error(\"Failed to delete from array file\");\n    }\n}\n// Helper function to organize artist data in GCS-like structure\nfunction createArtistDataStructure(artistData) {\n    const artistId = artistData.id;\n    const eventId = artistData.eventId;\n    return {\n        // Main artist data\n        profile: {\n            path: `artists/${artistId}/profile.json`,\n            data: {\n                id: artistData.id,\n                artistName: artistData.artistName,\n                realName: artistData.realName,\n                email: artistData.email,\n                phone: artistData.phone,\n                style: artistData.style,\n                performanceType: artistData.performanceType,\n                performanceDuration: artistData.performanceDuration,\n                biography: artistData.biography,\n                createdAt: artistData.createdAt,\n                status: artistData.status\n            }\n        },\n        // Technical specifications\n        technical: {\n            path: `artists/${artistId}/technical.json`,\n            data: {\n                costumeColor: artistData.costumeColor,\n                customCostumeColor: artistData.customCostumeColor,\n                lightColorSingle: artistData.lightColorSingle,\n                lightColorTwo: artistData.lightColorTwo,\n                lightColorThree: artistData.lightColorThree,\n                lightRequests: artistData.lightRequests,\n                stagePositionStart: artistData.stagePositionStart,\n                stagePositionEnd: artistData.stagePositionEnd,\n                customStagePosition: artistData.customStagePosition\n            }\n        },\n        // Social media and links\n        social: {\n            path: `artists/${artistId}/social.json`,\n            data: {\n                socialMedia: artistData.socialMedia,\n                showLink: artistData.showLink\n            }\n        },\n        // Notes and communications\n        notes: {\n            path: `artists/${artistId}/notes.json`,\n            data: {\n                mcNotes: artistData.mcNotes,\n                stageManagerNotes: artistData.stageManagerNotes,\n                specialRequirements: artistData.specialRequirements\n            }\n        },\n        // Music tracks metadata\n        music: {\n            path: `artists/${artistId}/music.json`,\n            data: {\n                tracks: artistData.musicTracks?.map((track)=>({\n                        song_title: track.song_title,\n                        duration: track.duration,\n                        notes: track.notes,\n                        is_main_track: track.is_main_track,\n                        tempo: track.tempo,\n                        file_path: `artists/${artistId}/music/${track.song_title.replace(/[^a-zA-Z0-9]/g, \"_\")}.mp3`\n                    })) || []\n            }\n        },\n        // Gallery metadata\n        gallery: {\n            path: `artists/${artistId}/gallery.json`,\n            data: {\n                files: artistData.galleryFiles?.map((file, index)=>({\n                        name: file.name,\n                        type: file.type,\n                        file_path: `artists/${artistId}/gallery/${index}_${file.name}`\n                    })) || []\n            }\n        },\n        // Event association\n        event: {\n            path: `events/${eventId}/artists/${artistId}.json`,\n            data: {\n                artistId: artistData.id,\n                artistName: artistData.artistName,\n                eventId: artistData.eventId,\n                eventName: artistData.eventName,\n                status: artistData.status,\n                registrationDate: artistData.createdAt\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/gcs.ts\n");

/***/ }),

/***/ "(rsc)/./lib/google-cloud-storage.ts":
/*!*************************************!*\
  !*** ./lib/google-cloud-storage.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GCSService: () => (/* binding */ GCSService),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google-cloud/storage */ \"(rsc)/./node_modules/@google-cloud/storage/build/esm/src/index.js\");\n\n// Initialize Google Cloud Storage\nlet storage = null;\nlet bucket = null;\nconst bucketName = process.env.GOOGLE_CLOUD_BUCKET_NAME || \"fame-event-data\";\n// Initialize Google Cloud Storage\ntry {\n    // Try different authentication methods\n    if (process.env.GOOGLE_CLOUD_PROJECT_ID) {\n        const storageConfig = {\n            projectId: process.env.GOOGLE_CLOUD_PROJECT_ID\n        };\n        // Use key file if provided\n        if (process.env.GOOGLE_CLOUD_KEY_FILE) {\n            storageConfig.keyFilename = process.env.GOOGLE_CLOUD_KEY_FILE;\n        } else if (process.env.GOOGLE_CLOUD_CREDENTIALS) {\n            storageConfig.credentials = JSON.parse(process.env.GOOGLE_CLOUD_CREDENTIALS);\n        }\n        storage = new _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__.Storage(storageConfig);\n        bucket = storage.bucket(bucketName);\n        console.log(`Google Cloud Storage initialized with bucket: ${bucketName}`);\n    } else {\n        console.error(\"Google Cloud Storage not configured: Missing GOOGLE_CLOUD_PROJECT_ID\");\n        throw new Error(\"Google Cloud Storage configuration missing\");\n    }\n} catch (error) {\n    console.error(\"Failed to initialize Google Cloud Storage:\", error);\n    throw error;\n}\nclass GCSService {\n    /**\r\n\t * Upload a file to Google Cloud Storage\r\n\t */ static async uploadFile(file, filename, folder, contentType) {\n        try {\n            if (!bucket) {\n                throw new Error(\"Google Cloud Storage not initialized\");\n            }\n            const gcsPath = `${folder}/${filename}`;\n            const gcsFile = bucket.file(gcsPath);\n            await gcsFile.save(file, {\n                metadata: {\n                    contentType\n                },\n                public: false\n            });\n            const [signedUrl] = await gcsFile.getSignedUrl({\n                action: \"read\",\n                expires: Date.now() + 24 * 60 * 60 * 1000\n            });\n            return {\n                url: signedUrl,\n                filename,\n                size: file.length,\n                contentType,\n                gcsPath\n            };\n        } catch (error) {\n            console.error(\"Error uploading file to Google Cloud Storage:\", error);\n            throw new Error(\"Failed to upload file to Google Cloud Storage\");\n        }\n    }\n    /**\r\n\t * Save JSON data to Google Cloud Storage\r\n\t */ static async saveJSON(data, path) {\n        try {\n            if (!bucket) {\n                throw new Error(\"Google Cloud Storage not initialized\");\n            }\n            const jsonData = JSON.stringify(data, null, 2);\n            const gcsFile = bucket.file(path);\n            await gcsFile.save(jsonData, {\n                metadata: {\n                    contentType: \"application/json\"\n                }\n            });\n            console.log(`JSON data saved to GCS: ${path}`);\n        } catch (error) {\n            console.error(\"Error saving JSON to Google Cloud Storage:\", error);\n            throw new Error(\"Failed to save data to Google Cloud Storage\");\n        }\n    }\n    /**\r\n\t * Read JSON data from Google Cloud Storage\r\n\t */ static async readJSON(path) {\n        try {\n            if (!bucket) {\n                throw new Error(\"Google Cloud Storage not initialized\");\n            }\n            const gcsFile = bucket.file(path);\n            const [exists] = await gcsFile.exists();\n            if (!exists) {\n                console.log(`File not found in GCS: ${path}`);\n                return null;\n            }\n            const [contents] = await gcsFile.download();\n            const data = JSON.parse(contents.toString());\n            console.log(`JSON data read from GCS: ${path}`);\n            return data;\n        } catch (error) {\n            console.error(\"Error reading JSON from Google Cloud Storage:\", error);\n            return null;\n        }\n    }\n    /**\r\n\t * List files in a folder\r\n\t */ static async listFiles(prefix) {\n        try {\n            if (!bucket) {\n                throw new Error(\"Google Cloud Storage not initialized\");\n            }\n            const [files] = await bucket.getFiles({\n                prefix\n            });\n            const fileNames = files.map((file)=>file.name);\n            console.log(`Listed ${fileNames.length} files from GCS with prefix: ${prefix}`);\n            return fileNames;\n        } catch (error) {\n            console.error(\"Error listing files from Google Cloud Storage:\", error);\n            return [];\n        }\n    }\n    /**\r\n\t * Delete a file from Google Cloud Storage\r\n\t */ static async deleteFile(path) {\n        try {\n            if (!bucket) {\n                throw new Error(\"Google Cloud Storage not initialized\");\n            }\n            const gcsFile = bucket.file(path);\n            await gcsFile.delete();\n            console.log(`File deleted from GCS: ${path}`);\n        } catch (error) {\n            console.error(\"Error deleting file from Google Cloud Storage:\", error);\n            throw new Error(\"Failed to delete file from Google Cloud Storage\");\n        }\n    }\n    /**\r\n\t * Get signed URL for file access\r\n\t */ static async getSignedUrl(path, expiresIn = 3600) {\n        try {\n            if (!bucket) {\n                throw new Error(\"Google Cloud Storage not initialized\");\n            }\n            const gcsFile = bucket.file(path);\n            const [signedUrl] = await gcsFile.getSignedUrl({\n                action: \"read\",\n                expires: Date.now() + expiresIn * 1000\n            });\n            console.log(`Generated signed URL for GCS file: ${path}`);\n            return signedUrl;\n        } catch (error) {\n            console.error(\"Error generating signed URL for Google Cloud Storage:\", error);\n            throw new Error(\"Failed to generate signed URL from Google Cloud Storage\");\n        }\n    }\n    /**\r\n\t * Save artist data in organized folder structure\r\n\t */ static async saveArtistData(artistData) {\n        const artistId = artistData.id;\n        const eventId = artistData.eventId;\n        try {\n            // Save main profile data\n            await this.saveJSON({\n                id: artistData.id,\n                artistName: artistData.artistName,\n                realName: artistData.realName,\n                email: artistData.email,\n                phone: artistData.phone,\n                style: artistData.style,\n                performanceType: artistData.performanceType,\n                performanceDuration: artistData.performanceDuration,\n                biography: artistData.biography,\n                createdAt: artistData.createdAt,\n                status: artistData.status,\n                eventId: artistData.eventId,\n                eventName: artistData.eventName\n            }, `artists/${artistId}/profile.json`);\n            // Save technical specifications\n            await this.saveJSON({\n                costumeColor: artistData.costumeColor,\n                customCostumeColor: artistData.customCostumeColor,\n                lightColorSingle: artistData.lightColorSingle,\n                lightColorTwo: artistData.lightColorTwo,\n                lightColorThree: artistData.lightColorThree,\n                lightRequests: artistData.lightRequests,\n                stagePositionStart: artistData.stagePositionStart,\n                stagePositionEnd: artistData.stagePositionEnd,\n                customStagePosition: artistData.customStagePosition,\n                equipment: artistData.equipment,\n                specialRequirements: artistData.specialRequirements\n            }, `artists/${artistId}/technical.json`);\n            // Save social media and links\n            await this.saveJSON({\n                socialMedia: artistData.socialMedia,\n                showLink: artistData.showLink\n            }, `artists/${artistId}/social.json`);\n            // Save notes and communications\n            await this.saveJSON({\n                mcNotes: artistData.mcNotes,\n                stageManagerNotes: artistData.stageManagerNotes,\n                notes: artistData.notes\n            }, `artists/${artistId}/notes.json`);\n            // Save music tracks metadata\n            await this.saveJSON({\n                tracks: artistData.musicTracks || []\n            }, `artists/${artistId}/music.json`);\n            // Save gallery metadata\n            await this.saveJSON({\n                files: artistData.galleryFiles || []\n            }, `artists/${artistId}/gallery.json`);\n            // Save event association\n            await this.saveJSON({\n                artistId: artistData.id,\n                artistName: artistData.artistName,\n                eventId: artistData.eventId,\n                eventName: artistData.eventName,\n                status: artistData.status,\n                registrationDate: artistData.createdAt\n            }, `events/${eventId}/artists/${artistId}.json`);\n            console.log(`Artist data saved to storage for artist: ${artistId}`);\n        } catch (error) {\n            console.error(\"Error saving artist data:\", error);\n            throw error;\n        }\n    }\n    /**\r\n\t * Get complete artist data from storage\r\n\t */ static async getArtistData(artistId) {\n        try {\n            const [profile, technical, social, notes, music, gallery] = await Promise.all([\n                this.readJSON(`artists/${artistId}/profile.json`),\n                this.readJSON(`artists/${artistId}/technical.json`),\n                this.readJSON(`artists/${artistId}/social.json`),\n                this.readJSON(`artists/${artistId}/notes.json`),\n                this.readJSON(`artists/${artistId}/music.json`),\n                this.readJSON(`artists/${artistId}/gallery.json`)\n            ]);\n            if (!profile) {\n                return null;\n            }\n            return {\n                ...profile,\n                ...technical,\n                ...social,\n                ...notes,\n                musicTracks: music?.tracks || [],\n                galleryFiles: gallery?.files || []\n            };\n        } catch (error) {\n            console.error(\"Error getting artist data:\", error);\n            return null;\n        }\n    }\n    /**\r\n\t * Get all artists for an event (simplified for demo)\r\n\t */ static async getEventArtists(eventId) {\n        try {\n            // For demo purposes, we'll return a sample artist if no real data exists\n            // In production, this would properly list and fetch all event artists\n            const sampleArtist = {\n                id: \"artist_1755011489205_xswjcvfdv\",\n                artistName: \"Water Festival Stage\",\n                realName: \"John Wick (Htoo Aung Wai)\",\n                email: \"john@gmail.com\",\n                phone: \"052 211 6024\",\n                style: \"Death Metal\",\n                performanceType: \"other\",\n                performanceDuration: 5,\n                biography: \"I like Death Metal.\",\n                costumeColor: \"red\",\n                lightColorSingle: \"blue\",\n                lightColorTwo: \"magenta\",\n                lightColorThree: \"amber\",\n                stagePositionStart: \"downstage-left\",\n                stagePositionEnd: \"left\",\n                socialMedia: {\n                    instagram: \"https://www.officeolympics.io\",\n                    facebook: \"https://www.officeolympics.io\",\n                    youtube: \"https://www.officeolympics.io\",\n                    tiktok: \"https://www.officeolympics.io\",\n                    website: \"https://www.officeolympics.io\"\n                },\n                eventId: eventId,\n                eventName: \"EDM Festival\",\n                status: \"pending\",\n                createdAt: \"2025-08-12T15:11:29.205Z\",\n                musicTracks: [\n                    {\n                        song_title: \"Metal\",\n                        duration: 2,\n                        notes: \"No one\",\n                        is_main_track: true,\n                        tempo: \"medium\"\n                    }\n                ],\n                galleryFiles: []\n            };\n            return [\n                sampleArtist\n            ];\n        } catch (error) {\n            console.error(\"Error getting event artists:\", error);\n            return [];\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GCSService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/google-cloud-storage.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@google-cloud","vendor-chunks/google-auth-library","vendor-chunks/tr46","vendor-chunks/readable-stream","vendor-chunks/bignumber.js","vendor-chunks/fast-xml-parser","vendor-chunks/gaxios","vendor-chunks/teeny-request","vendor-chunks/node-fetch","vendor-chunks/whatwg-url","vendor-chunks/mime","vendor-chunks/html-entities","vendor-chunks/json-bigint","vendor-chunks/event-target-shim","vendor-chunks/google-logging-utils","vendor-chunks/gcp-metadata","vendor-chunks/debug","vendor-chunks/http-proxy-agent","vendor-chunks/https-proxy-agent","vendor-chunks/gtoken","vendor-chunks/agent-base","vendor-chunks/string_decoder","vendor-chunks/retry-request","vendor-chunks/jws","vendor-chunks/jwa","vendor-chunks/retry","vendor-chunks/duplexify","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/webidl-conversions","vendor-chunks/strnum","vendor-chunks/base64-js","vendor-chunks/abort-controller","vendor-chunks/extend","vendor-chunks/ms","vendor-chunks/end-of-stream","vendor-chunks/safe-buffer","vendor-chunks/p-limit","vendor-chunks/async-retry","vendor-chunks/buffer-equal-constant-time","vendor-chunks/inherits","vendor-chunks/yocto-queue","vendor-chunks/once","vendor-chunks/wrappy","vendor-chunks/@tootallnate","vendor-chunks/stubs","vendor-chunks/is-stream","vendor-chunks/stream-shift","vendor-chunks/stream-events","vendor-chunks/arrify","vendor-chunks/util-deprecate","vendor-chunks/bcryptjs"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fregister%2Froute&page=%2Fapi%2Fauth%2Fregister%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fregister%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CDownloads%5Cfame-event-manager%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CDownloads%5Cfame-event-manager&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();